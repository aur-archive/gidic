--- Makefile.am	2006-08-09 21:16:06.000000000 +0700
+++ ../../gidic-1.0/Makefile.am	2007-04-16 02:46:50.000000000 +0700
@@ -22,8 +22,6 @@
 	fi
 	$(INSTALL_DATA) gidic.db $(DESTDIR)$(pkgdatadir)
 	$(INSTALL_DATA) COPYING $(DESTDIR)$(pkgdatadir)
-	$(INSTALL_DATA) gidic.desktop /usr/share/applications
-	$(INSTALL_DATA) $(srcdir)/pixmaps/gidic-icon48.png /usr/share/pixmaps/gidic.png
 
 dist-hook:
 	if test -d pixmaps; then \
--- Makefile.in	2006-08-09 21:16:31.000000000 +0700
+++ ../../gidic-1.0/Makefile.in	2007-04-16 02:47:49.000000000 +0700
@@ -613,8 +613,6 @@
 	fi
 	$(INSTALL_DATA) gidic.db $(DESTDIR)$(pkgdatadir)
 	$(INSTALL_DATA) COPYING $(DESTDIR)$(pkgdatadir)
-	$(INSTALL_DATA) gidic.desktop /usr/share/applications
-	$(INSTALL_DATA) $(srcdir)/pixmaps/gidic-icon48.png /usr/share/pixmaps/gidic.png
 
 dist-hook:
 	if test -d pixmaps; then \
--- src/callbacks.c	2006-08-04 19:10:23.000000000 +0700
+++ ../../gidic-1.0/src/callbacks.c	2007-04-15 22:35:46.000000000 +0700
@@ -3,8 +3,6 @@
 #endif
 
 #include <gtk/gtk.h>
-#define ALSA_PCM_NEW_HW_PARAMS_API
-#include <alsa/asoundlib.h>
 #include <stdio.h>
 #include <dirent.h>
 #include "callbacks.h"
@@ -12,7 +10,7 @@
 #include "support.h"
 
 
-GtkWidget *this, *contentview, *btnsay, *statusbar, *progressbar;
+GtkWidget *this, *contentview, *statusbar, *progressbar;
 FILE *dic_fh;
 
 GtkTextBuffer *textbuffer;
@@ -65,108 +63,6 @@
     return return_val;
 }
 
-
-int file_exists (char* file_name)
-{
-    DIR *dir;
-    struct dirent* entry;
-    int retval = 0;
-
-    dir = opendir (PACKAGE_DATA_DIR "/gidic/voices");
-    if (dir != NULL)
-    {
-        while ((entry = readdir(dir)) != NULL)
-        {
-            if (strcmp(entry->d_name, file_name) == 0)
-            {
-                retval = 1;
-                break;
-            }
-        }
-    }
-    else
-    {
-      msg_box("Can not open Data directory SOUND_DATA_DIR");
-    }
-    closedir(dir);
-    return retval;
-}
-
-
-int play_sound (char *fname)
-{
-    FILE *fh;
-    long loops;
-    int rc, size, dir;
-    snd_pcm_t *handle;
-    snd_pcm_hw_params_t *params;
-    unsigned int val;
-    snd_pcm_uframes_t frames;
-    char *buffer;
-    char *full_path;
-    long szfread;
-
-    rc = snd_pcm_open(&handle, "default", SND_PCM_STREAM_PLAYBACK, 0);
-    if (rc < 0)
-    {
-        g_sprintf (buffer, N_("Unable to open pcm device: %s"), snd_strerror(rc));
-        msg_box (buffer);
-        return 1;
-    }
-    val = 44100;
-    frames = 32;
-    snd_pcm_hw_params_alloca(&params);
-    snd_pcm_hw_params_any(handle, params);
-    snd_pcm_hw_params_set_access(handle, params, SND_PCM_ACCESS_RW_INTERLEAVED);
-    snd_pcm_hw_params_set_format(handle, params, SND_PCM_FORMAT_S16_LE);
-    snd_pcm_hw_params_set_channels(handle, params, 2);
-    snd_pcm_hw_params_set_rate_near(handle, params, &val, &dir);
-    snd_pcm_hw_params_set_period_size_near(handle, params, &frames, &dir);
-    rc = snd_pcm_hw_params(handle, params);
-    if (rc < 0)
-    {
-        g_sprintf (buffer, N_("Unable to set hw parameters: %s"), snd_strerror(rc));
-        msg_box (buffer);
-        return 1;
-    }
-    full_path = g_strconcat (PACKAGE_DATA_DIR "/gidic/voices/",fname,NULL);
-    fh = fopen (full_path,"r");
-    if (fh == NULL)
-    {
-        g_sprintf (buffer, N_("Can not play: %s"), fname);
-        msg_box (buffer);
-        return 1;
-    }
-    snd_pcm_hw_params_get_period_size(params, &frames, &dir);
-    size = frames * 4;
-    buffer = (char *) malloc(size);
-    while ((szfread = fread (buffer, 1, size, fh)) > 0)
-    {
-        rc = snd_pcm_writei(handle, buffer, frames);
-        if (rc == -EPIPE)
-        {
-            msg_box ("Underrun occurred");
-            snd_pcm_prepare(handle);
-        }
-        else if (rc < 0)
-        {
-            g_sprintf (buffer, N_("Error from writei: %s"), snd_strerror(rc));
-            msg_box (buffer);
-        }
-        else if (rc != (int)frames)
-        {
-            g_sprintf (buffer, N_("short write, write %d frames"), rc);
-            msg_box (buffer);
-        }
-    }
-    fclose (fh); 
-    snd_pcm_drain(handle);
-    snd_pcm_close(handle);
-    free(buffer);
-    return 0;
-}
-
-
 void
 on_mainwindow_show                     (GtkWidget       *widget,
                                         gpointer         user_data)
@@ -175,11 +71,9 @@
     gtk_widget_set_usize (this,400,450);
     contentview = lookup_widget (this,"contentview");
     clipboard = gtk_clipboard_get (atom);
-    btnsay = lookup_widget (this,"btnsay");
     statusbar = lookup_widget (this,"statusbar");
     progressbar = lookup_widget (this,"progressbar");
     init_looknfeel ();
-    gtk_widget_hide (btnsay);
     open_datadb (NULL);
     smode=0;
     return;
@@ -390,27 +284,6 @@
 
 
 void
-on_btnsay_clicked                      (GtkToolButton   *toolbutton,
-                                        gpointer         user_data)
-{
-    GtkWidget* searchtext;
-    gchar *selected_text;
-
-    searchtext = lookup_widget(this,"searchentry");
-    selected_text = (gchar*)gtk_entry_get_text(GTK_ENTRY(searchtext));
-    if (strlen(selected_text) > 1)
-    {
-        selected_text = g_strconcat (selected_text, ".wav", NULL);
-        if (file_exists (selected_text)==1)
-            play_sound (selected_text);
-        else
-            msg_box("Can not 'Say'. File does not exists.");
-    }
-    return;
-}
-
-
-void
 on_findbutton_clicked                  (GtkButton       *button,
                                         gpointer         user_data)
 {
@@ -480,10 +353,6 @@
         }
     }
     strentry = g_strconcat (findstr,".wav",NULL);
-    if (file_exists(strentry)==1)
-        gtk_widget_show (btnsay);
-    else
-        gtk_widget_hide (btnsay);
     if (found >= 1)
         sprintf (buffer,"Done. %d %s found.",found,(found > 1 ? "words" : "word"));
     else
--- src/callbacks.h	2006-08-02 18:55:51.000000000 +0700
+++ ../../gidic-1.0/src/callbacks.h	2007-04-15 22:36:31.000000000 +0700
@@ -76,10 +76,6 @@
                                         gpointer         user_data);
 
 void
-on_btnsay_clicked                      (GtkToolButton   *toolbutton,
-                                        gpointer         user_data);
-
-void
 on_findbutton_clicked                  (GtkButton       *button,
                                         gpointer         user_data);
 
--- src/interface.c	2006-08-02 18:09:14.000000000 +0700
+++ ../../gidic-1.0/src/interface.c	2007-04-15 22:21:39.000000000 +0700
@@ -61,7 +61,6 @@
   GtkWidget *tmp_image;
   GtkWidget *btngbr;
   GtkWidget *btnidn;
-  GtkWidget *btnsay;
   GtkWidget *contentvbox;
   GtkWidget *searchhbox;
   GtkWidget *searchlabel;
@@ -204,10 +203,6 @@
   gtk_radio_tool_button_set_group (GTK_RADIO_TOOL_BUTTON (btnidn), btngbr_group);
   btngbr_group = gtk_radio_tool_button_get_group (GTK_RADIO_TOOL_BUTTON (btnidn));
 
-  btnsay = (GtkWidget*) gtk_tool_button_new_from_stock ("gtk-media-play");
-  gtk_widget_show (btnsay);
-  gtk_container_add (GTK_CONTAINER (toolbar), btnsay);
-
   contentvbox = gtk_vbox_new (FALSE, 4);
   gtk_widget_show (contentvbox);
   gtk_box_pack_start (GTK_BOX (vbox), contentvbox, TRUE, TRUE, 2);
@@ -298,9 +293,6 @@
   g_signal_connect ((gpointer) btnidn, "toggled",
                     G_CALLBACK (on_btnidn_toggled),
                     NULL);
-  g_signal_connect ((gpointer) btnsay, "clicked",
-                    G_CALLBACK (on_btnsay_clicked),
-                    NULL);
   g_signal_connect ((gpointer) findbutton, "clicked",
                     G_CALLBACK (on_findbutton_clicked),
                     NULL);
@@ -333,7 +325,6 @@
   GLADE_HOOKUP_OBJECT (mainwindow, btnseparator, "btnseparator");
   GLADE_HOOKUP_OBJECT (mainwindow, btngbr, "btngbr");
   GLADE_HOOKUP_OBJECT (mainwindow, btnidn, "btnidn");
-  GLADE_HOOKUP_OBJECT (mainwindow, btnsay, "btnsay");
   GLADE_HOOKUP_OBJECT (mainwindow, contentvbox, "contentvbox");
   GLADE_HOOKUP_OBJECT (mainwindow, searchhbox, "searchhbox");
   GLADE_HOOKUP_OBJECT (mainwindow, searchlabel, "searchlabel");
